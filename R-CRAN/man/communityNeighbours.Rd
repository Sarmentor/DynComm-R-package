% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DynComm.R
\docType{methods}
\name{communityNeighbours}
\alias{communityNeighbours}
\alias{communityNeighbours.DynComm}
\title{communityNeighbours}
\usage{
communityNeighbours(x,community, ...)
}
\arguments{
\item{x}{A DynComm object, if not using the inline version of the
function call}

\item{community}{The community to get neighbours from}

\item{...}{Any future additional parameters}
}
\value{
a matrix of all communities in the graph that are neighbours of the
given community and their edge weight
}
\description{
Get all neighbours (communities connected through direct edges) of the given
community in the graph from the selected post processing algorithm or the main
algorithm, after the last iteration.
}
\details{
The return value is a matrix with two columns. The first is the neighbour and
the second is the weight of the edge that connects them.
}
\examples{
\donttest{
dc<-DynComm(ALGORITHM$LOUVAIN,CRITERION$MODULARITY,parameters)
dc$communityNeighbours(community)
}
\donttest{
dc<-DynComm(ALGORITHM$LOUVAIN,CRITERION$MODULARITY,parameters)
communityNeighbours(dc,community)
}

}
\seealso{
\code{\link{DynComm}} , \code{\link{postProcess}}
}
\author{
poltergeist0
}
