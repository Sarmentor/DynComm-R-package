% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DynComm.R
\docType{methods}
\name{communityMapping}
\alias{communityMapping}
\alias{communityMapping.DynComm}
\title{communityMapping}
\usage{
communityMapping(x,differential, file, ...)
}
\arguments{
\item{x}{A DynComm object, if not using the inline version of the
function call}

\item{differential}{If TRUE, only values that have changed in the latest run
will be returned}

\item{file}{If given, outputs the community mapping to the given file instead
of the console}

\item{...}{Any future additional parameters}
}
\value{
a matrix with either the community mapping or a boolean value
}
\description{
Get the community mapping for all communities from the selected post processing
algorithm or the main algorithm, after the last iteration.
}
\details{
If file is not given, returns a two column matrix with vertices in
the first column and the communities in the second.

If file is given, returns a single row, single column matrix with TRUE or
FALSE, depending whether if writing to file succeeded or failed, respectively.

When writing to file, if the Community-Vertex program parameter is TRUE, each
line of the file will have the community first, followed by a list of vertices
that belong to the community. If that parameter is FALSE, each line will have
a single vertex followed by its community. All values are separated by a white
character.
}
\examples{
\donttest{
dc<-DynComm(ALGORITHM$LOUVAIN,CRITERION$MODULARITY,parameters)
dc$communityMapping()
}
\donttest{
dc<-DynComm(ALGORITHM$LOUVAIN,CRITERION$MODULARITY,parameters)
communityMapping(dc)
}

}
\seealso{
\code{\link{DynComm}} , \code{\link{postProcess}}
}
\author{
poltergeist0
}
